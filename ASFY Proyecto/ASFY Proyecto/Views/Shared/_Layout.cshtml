<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mi aplicación ASP.NET</title>


    @Styles.Render("~/Content/Site.css")
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">

    <!-- Font Awesome icons (free version)-->
    <script src="https://use.fontawesome.com/releases/v5.12.1/js/all.js" crossorigin="anonymous"></script>
    <!-- Google fonts-->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
    <link href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css" />


    @Scripts.Render("~/bundles/modernizr")

</head>
<body>


    <header>
        <nav class="navbar fixed-top navbar-expand-lg navbar-dark bg-dark">

            @Html.ActionLink("ASFY", "Home", "ASFY", new { area = "AA2020" }, new { @class = "navbar-brand" })

            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">

                    <li class="nav-item">
                        @Html.ActionLink("MiPerfil", "MiPerfil", "ASFY", null, new { @class = "nav-link" })
                    </li>

                    <li class="nav-item">
                        @Html.ActionLink("Programas", "Programas", "ASFY", null, new { @class = "nav-link" })
                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("Rutimas", "Rutinas", "ASFY", null, new { @class = "nav-link" })
                    </li>

                    <li class="nav-item">
                        @Html.ActionLink("QuienesSomos", "QuienesSomos", "ASFY", null, new { @class = "nav-link" })
                    </li>
                </ul>
                <span class="navbar-text">
                    <button class="btn btn-sm btn-outline-secondary" type="button">
                        @Html.ActionLink("Login", "InicioSesion", "ASFY", null, new { @class = "nav-link" })
                    </button>

                    <button class="btn btn-sm btn-outline-secondary" type="button">
                        @Html.ActionLink("Registrarse", "Registrarse", "ASFY", null, new { @class = "nav-link" })
                    </button>
                </span>

            </div>
        </nav>
    </header>


    @RenderBody()

    <footer>
        <div class="bg-dark">
            <div class="text-center text-secondary py-3">
                © 2020 Copyright
                <div class="text-secondary">
                    Maria Belen Piva, Angela Park y Cecilia Lombardi
                    <br>
                </div>
            </div>
        </div>
    </footer>


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)


    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
            integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
            integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>




    <script>
        $('#myModal').modal('show');
    </script>

    <script>
        $(document).ready(function () {
            $('#loginModal').modal('show');
            $(function () {
                $('[data-toggle="tooltip"]').tooltip()
            })
        });
    </script>

    <script>
        let nav = 0;
        let clicked = null;
        let events = localStorage.getItem('events') ? JSON.parse(localStorage.getItem('events')) : [];

        const calendar = document.getElementById('calendar');
        const newEventModal = document.getElementById('newEventModal');
        const deleteEventModal = document.getElementById('deleteEventModal');
        const backDrop = document.getElementById('modalBackDrop');
        const eventTitleInput = document.getElementById('eventTitleInput');
        const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

        function openModal(date) {
            clicked = date;

            const eventForDay = events.find(e => e.date === clicked);

            if (eventForDay) {
                document.getElementById('eventText').innerText = eventForDay.title;
                deleteEventModal.style.display = 'block';
            } else {
                newEventModal.style.display = 'block';
            }

            backDrop.style.display = 'block';
        }

        function load() {
            const dt = new Date();

            if (nav !== 0) {
                dt.setMonth(new Date().getMonth() + nav);
            }

            const day = dt.getDate();
            const month = dt.getMonth();
            const year = dt.getFullYear();

            const firstDayOfMonth = new Date(year, month, 1);
            const daysInMonth = new Date(year, month + 1, 0).getDate();

            const dateString = firstDayOfMonth.toLocaleDateString('en-us', {
                weekday: 'long',
                year: 'numeric',
                month: 'numeric',
                day: 'numeric',
            });
            const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);

            document.getElementById('monthDisplay').innerText =
                `${dt.toLocaleDateString('en-us', { month: 'long' })} ${year}`;

            calendar.innerHTML = '';

            for (let i = 1; i <= paddingDays + daysInMonth; i++) {
                const daySquare = document.createElement('div');
                daySquare.classList.add('day');

                const dayString = `${month + 1}/${i - paddingDays}/${year}`;

                if (i > paddingDays) {
                    daySquare.innerText = i - paddingDays;
                    const eventForDay = events.find(e => e.date === dayString);

                    if (i - paddingDays === day && nav === 0) {
                        daySquare.id = 'currentDay';
                    }

                    if (eventForDay) {
                        const eventDiv = document.createElement('div');
                        eventDiv.classList.add('event');
                        eventDiv.innerText = eventForDay.title;
                        daySquare.appendChild(eventDiv);
                    }

                    daySquare.addEventListener('click', () => openModal(dayString));
                } else {
                    daySquare.classList.add('padding');
                }

                calendar.appendChild(daySquare);
            }
        }

        function closeModal() {
            eventTitleInput.classList.remove('error');
            newEventModal.style.display = 'none';
            deleteEventModal.style.display = 'none';
            backDrop.style.display = 'none';
            eventTitleInput.value = '';
            clicked = null;
            load();
        }

        function saveEvent() {
            if (eventTitleInput.value) {
                eventTitleInput.classList.remove('error');

                events.push({
                    date: clicked,
                    title: eventTitleInput.value,
                });

                localStorage.setItem('events', JSON.stringify(events));
                closeModal();
            } else {
                eventTitleInput.classList.add('error');
            }
        }

        function deleteEvent() {
            events = events.filter(e => e.date !== clicked);
            localStorage.setItem('events', JSON.stringify(events));
            closeModal();
        }

        function initButtons() {
            document.getElementById('nextButton').addEventListener('click', () => {
                nav++;
                load();
            });

            document.getElementById('backButton').addEventListener('click', () => {
                nav--;
                load();
            });

            document.getElementById('saveButton').addEventListener('click', saveEvent);
            document.getElementById('cancelButton').addEventListener('click', closeModal);
            document.getElementById('deleteButton').addEventListener('click', deleteEvent);
            document.getElementById('closeButton').addEventListener('click', closeModal);
        }

        initButtons();
        load();
    </script>

</body>
</html>